name: $(TeamProject)_$(BuildDefinitionName)_$(SourceBranchName)_$(VersionMajor).$(VersionMinor).$(VersionPatch).$(Build.BuildId)$(PrereleaseLabel)

variables:
  - name: _version
    value: $(VersionMajor).$(VersionMinor).$(VersionPatch).$(Build.BuildId)
  - name: _packageVersion
    value: $(_version)$(PrereleaseLabel)
  - name: _publishNugetPackages
    value: $[or(eq(variables['PrereleaseLabel'], ''), eq(variables['PrereleaseLabel'], '-beta'))]

trigger:
- master

pool: 
  vmImage: ubuntu-latest

jobs:
- job: 
  displayName: Build and Test
  steps:
  - script: dotnet build /warnaserror --configuration Release -p:Version=$(_version) -p:PackageVersion=$(_packageVersion)
    displayName: Build solution 

  - task: DotNetCoreCLI@2
    displayName: Execute Unit Tests
    inputs:
      command: 'test'
      projects: './DbSafeTests/DbSafeTests.csproj'

  - task: DotNetCoreCLI@2
    displayName: Execute Integration Tests - SqliteDbSafe project
    inputs:
      command: 'test'
      projects: './SqliteDbSafeTests/SqliteDbSafeTests.csproj'

  - script: git clone https://github.com/dbsafe/dbsafe-pg-db
    displayName: Checkout PostgreSql test database
  - script: docker-compose -f ./dbsafe-pg-db/docker-compose.yml up --build -d
    displayName: Start container with PostgreSql database
  - script: docker ps
    displayName: Print Docker containers

  - script: git clone https://github.com/dbsafe/dbsafe-sql-db
    displayName: Checkout MS-SQL Server test database
  - script: docker-compose -f ./dbsafe-sql-db/docker-compose.yml up --build -d
    displayName: Start container with MS-SQL Server
  - script: docker ps
    displayName: Print Docker containers

  - task: PowerShell@2
    inputs:
      targetType: 'filePath'
      filePath: ./dbsafe-pg-db/wait-for-db.ps1
      arguments: >
        -ContainerName demo-pg-db 
        -MaxNumberOfTries 120
    displayName: Wait for PostgreSql database

  - task: DotNetCoreCLI@2
    displayName: Execute Integration Tests - PgDbSafe project
    inputs:
      command: 'test'
      projects: './PgDbSafeTests/PgDbSafeTests.csproj'

  - task: PowerShell@2
    inputs:
      targetType: 'filePath'
      filePath: ./dbsafe-sql-db/wait-for-db.ps1
      arguments: >
        -ContainerName demo-sql-db 
        -MaxNumberOfTries 120
    displayName: Wait for MS-SQL Server database

  - script: sqlcmd -S localhost -U sa -P "yourStrong(!)Password" -i ./dbsafe-sql-db/ProductDatabase.sql
    displayName: Deploy MS-SQL database using script

  - task: DotNetCoreCLI@2
    displayName: Execute Integration Tests - SqlDbSafe project
    inputs:
      command: 'test'
      projects: './SqlDbSafeTests/SqlDbSafeTests.csproj'
